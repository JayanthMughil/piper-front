{"version":3,"sources":["webpack:///./src/js/app/userAuthorization/view/topBar.js","webpack:///./src/css/index.css?cca9","webpack:///./src/js/app/addressPage/view/addressHome.js","webpack:///./src/js/app/init.js"],"names":["TopBar","props","setState","isLoginOpen","console","log","loginRef","current","loginMailRef","React","createRef","loginPassRef","state","handleLoginClose","handleLogin","handleLoginOpen","renderLoginForm","Component","AddressPage","Init","fetch","headers","then","resp","err","initialize","ReactDOM","render","document","getElementById"],"mappings":"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","file":"assets/js/appInit.js","sourcesContent":["import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass TopBar extends Component {\n\n    constructor (props) {\n        super(props);\n        this.loginMailRef = React.createRef();\n        this.loginPassRef = React.createRef();\n        this.state = {\n            isLoginOpen: false\n        };\n    }\n\n    handleLoginClose = () => {\n        this.setState({\n            isLoginOpen: false\n        });\n    }\n\n    handleLoginOpen = () => {\n        this.setState({\n            isLoginOpen: true\n        });\n    }\n\n    handleLogin = () => {\n        console.log(this.loginRef.current);\n    }\n\n    renderLoginForm () {\n        return (\n        <Dialog open={this.state.isLoginOpen} onClose={this.handleLoginClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        To subscribe to this website, please enter your email address here. We will send updates\n                        occasionally.\n                    </DialogContentText>\n            <input ref={this.loginRef} placeholder=\"Email address\" />\n            <input ref={this.loginRef} placeholder=\"password\" />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleLoginClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.handleLogin} color=\"primary\">\n            Login\n          </Button>\n        </DialogActions>\n      </Dialog>\n        );\n    }\n\n    render () {\n        return (\n        <>\n        <div className=\"topBar\">\n            <div className=\"appNameWrapper\">\n              <span className=\"appLogo\"></span>\n              <span className=\"appName\">Pockets</span>\n            </div>\n            <div className=\"actionWrapper\">\n              <button className=\"btn btn-primary\" type=\"button\">Register</button>\n              <button onClick={this.handleLoginOpen} className=\"btn btn-primary\" type=\"button\">Log in</button>\n            </div>\n        </div>\n       {this.renderLoginForm()}\n        </>\n        );\n    }\n\n}\n\nexport {TopBar};","// extracted by mini-css-extract-plugin","import React, { Component } from 'react';\n\nclass AddressPage extends Component {\n\n    render () {\n        return (\n        <div className=\"addressDiv\">\n            <div className=\"fromToDiv\">\n              <div className=\"fromAddDiv\">\n                <div className=\"dropWrapDiv\">\n                  <div className=\"addressLabelDiv\"><span>From</span></div>\n                  <div className=\"addressDropDiv\">\n                      <div className=\"dropDownDiv\"><span className=\"dropTextDiv\">From address</span><i className=\"fa fa-chevron-down btmArrow\"></i></div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"toAddDiv\">\n                <div className=\"dropWrapDiv\">\n                  <div className=\"addressLabelDiv\"><span>To</span></div>\n                  <div className=\"addressDropDiv\">\n                      <div className=\"dropDownDiv\"><span className=\"dropTextDiv\">To address</span><i className=\"fa fa-chevron-down btmArrow\"></i></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n        </div>\n        );\n    }\n\n}\n\nexport {AddressPage};","import React, { Component } from 'react';\nimport {TopBar} from \"./userAuthorization/view/topBar\"\nimport {AddressPage} from \"./addressPage/view/addressHome\";\nimport ReactDOM from 'react-dom';\n\nimport \"../../css/index.css\";\n\nclass Init extends Component {\n\n  componentDidMount = () => {\n    fetch(\"http://localhost:8080/PiedPiper/rest/helloapi\",{\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then((resp) => {\n      console.log(\"success\");\n    }).catch((err) => {\n      console.log(err);\n    })\n  }\n\n  render () {\n    return (\n      <div className=\"wrapper\">\n        <TopBar />\n        <div className=\"menuNavigation\"></div>\n        <div className=\"blkWrapper\">\n          <div className=\"cBlk\">\n            <AddressPage />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nconst initialize = () => {\n\n    ReactDOM.render(\n        <Init />,\n        document.getElementById('OuterFrame')\n      );\n\n};\n\nexport {initialize};\n"],"sourceRoot":""}